{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "ScatterChart.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "QuadTree.svelte",
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "ScrollyApp.svelte",
    "SimpsonEq.svelte",
    "SimpsonsChart.svelte",
    "SimpsonsGrid.svelte",
    "SimpsonsLegend.svelte",
    "Divider.svelte",
    "Filler.svelte",
    "Header.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte",
    "Map.svelte",
    "Arrow.svelte",
    "Em.svelte"
  ],
  "sourcesContent": [
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg, WebGL, Html } from 'layercake';\n\n\timport Plot from './shared/Scatter.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport QuadTree from './shared/QuadTree.svelte';\n\t\n\texport let data;\n\texport let diameter = 5;\n\texport let colors = [[128, 128, 128]];\n\texport let categories = null;\n\texport let selected = null;\n\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let catKey = 'group';\n\t\n\tconst padding = 6;\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: calc(100% - 90px);\n\t}\n\t.tooltip {\n\t\tposition: absolute;\n\t\tdisplay: block;\n\t\tbackground-color: rgba(255, 255, 255, 0.7);\n\t\tpadding: 5px;\n\t\tcolor: #000;\n\t}\n\t.circle {\n\t\tposition: absolute;\n\t\tborder-radius: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tpointer-events: none;\n\t\twidth: 8px;\n\t\theight: 8px;\n\t\tborder: 2px solid #fff;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tpadding={{ top: 10, right: 5, bottom: 20, left: 25 }}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\txPadding={[padding, padding]}\n\t\tyPadding={[padding, padding]}\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX\n\t\t\t\tticks={5}\n\t\t\t/>\n\t\t\t<AxisY\n\t\t\t\tticks={5}\n\t\t\t/>\n\t\t</Svg>\n\n\t\t<WebGL>\n\t\t\t<Plot\n\t\t\t\t{diameter}\n\t\t\t\t{colors}\n\t\t\t\t{categories}\n\t\t\t\t{catKey}\n\t\t\t\t{selected}\n\t\t\t/>\n\t\t</WebGL>\n\t\t\n\t\t<Html>\n\t\t\t<QuadTree\n\t\t\t\tlet:x\n\t\t\t\tlet:y\n\t\t\t\tlet:visible\n\t\t\t\tlet:found\n\t\t\t\t{selected}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"circle\"\n\t\t\t\t\tstyle=\"top:{y}px;left:{x}px;display: { visible ? 'block' : 'none' };\"\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"tooltip\"\n\t\t\t\t\tstyle=\"top:{y+ 5}px;left:{x + 10}px;display: { visible ? 'block' : 'none' };\"\n\t\t\t\t>{#if found.lad_name}{found.lad_name} {found.lsoa_name}<br />{/if}{xKey}: {Number(found[xKey]).toFixed(2)}<br/>{yKey}: {Number(found[yKey]).toFixed(2)}<br/></div>\n\t\t\t</QuadTree>\n\t\t</Html>\n\t</LayerCake>\n</div>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { width, height, xScale, yScale, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let baseline = false;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0 }\"\n\t\t\t\ty='{yTick}'\n\t\t\t\tdx='{dxTick}'\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(i)}'>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n\t{#if baseline === true}\n\t\t<line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n\t{/if}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\tline,\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.baseline {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding, xRange, xScale, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tx2='100%'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n\t\t\t\tdx='{isBandwidth ? -5 : dxTick}'\n\t\t\t\tdy='{isBandwidth ? 4 : dyTick}'\n\t\t\t\tstyle=\"text-anchor:{isBandwidth ? 'end' : textAnchor};\"\n\t\t\t>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { quadtree } from 'd3-quadtree';\n\n\tconst { data, xGet, yGet, width, height } = getContext('LayerCake');\n\n\tlet visible = false;\n\tlet found = {};\n\tlet e = {};\n\n\texport let dataset = undefined;\n\texport let x = 'x';\n\texport let y = 'y';\n\texport let searchRadius = undefined;\n\texport let selected = null;\n\n\t$: xGetter = x === 'x' ? $xGet : $yGet;\n\t$: yGetter = y === 'y' ? $yGet : $xGet;\n\t\n\t$: dataset = !selected ? undefined : $data.filter(d => d[selected.col] == selected.value);\n\n\tfunction findItem (evt) {\n\t\te = evt;\n\n\t\tconst xLayerKey = `layer${x.toUpperCase()}`;\n\t\tconst yLayerKey = `layer${y.toUpperCase()}`;\n\n\t\tfound = finder.find(evt[xLayerKey], evt[yLayerKey], searchRadius) || {};\n\t\tvisible = Object.keys(found).length > 0;\n\t}\n\n\t$: finder = quadtree()\n\t\t.extent([[-1, -1], [$width + 1, $height + 1]])\n\t\t.x(xGetter)\n\t\t.y(yGetter)\n\t\t.addAll(dataset || $data);\n\n</script>\n\n<style>\n\t.bg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n</style>\n\n<div\n\tclass=\"bg\"\n\ton:mousemove=\"{findItem}\"\n\ton:mouseout=\"{() => visible = false}\"\n></div>\n<slot\n\tx={xGetter(found) || 0}\n\ty={yGetter(found) || 0}\n\t{found}\n\t{visible}\n\t{e}\n></slot>",
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n  import { setContext, onMount } from 'svelte'\n  import { getData, setColors, getMotion } from './utils.js'\n  import { themes, regions, colors, datakeys } from './config.js'\n  import { ScatterChart } from '@onsvisual/svelte-charts'\n  import ONSHeader from './layout/ONSHeader.svelte'\n  import ONSFooter from './layout/ONSFooter.svelte'\n  import Header from './layout/Header.svelte'\n  import Section from './layout/Section.svelte'\n  import Media from './layout/Media.svelte'\n  import Scroller from './layout/Scroller.svelte'\n  import Filler from './layout/Filler.svelte'\n  import Divider from './layout/Divider.svelte'\n  import Map from './map/Map.svelte'\n  import Em from './ui/Em.svelte'\n  import Arrow from './ui/Arrow.svelte'\n\n  import SimpsonsChart from './components/simpsons/SimpsonsChart.svelte'\n\n  // STYLE CONFIG\n  // Set theme globally (options are 'light' or 'dark')\n  let theme = 'light'\n  setContext('theme', theme)\n  setColors(themes, theme)\n\n  // SCROLLYTELLING CONFIG\n  // Config\n  const threshold = 0.65\n  let animation = true\n  let groupedByAge = false\n  // State\n  let index = []\n  let indexPrev = []\n  let key\n  let image\n  let prevImage\n  onMount(() => {\n    indexPrev = [...index]\n  })\n\n  $: imageUrl = 'img/' + image\n  $: prevImageUrl = 'img/' + prevImage\n\n  // Actions for CHART scroller\n  // const chartActions = [\n  //   () => {\n  //     groupedByAge = false\n  //   },\n  //   () => {\n  //     groupedByAge = true\n  //   },\n  // ]\n\n  const chartActions = {\n    ungrouped: () => {\n      groupedByAge = false\n    },\n    grouped: () => {\n      groupedByAge = true\n    },\n    legend: () => {},\n  }\n\n  let scrollyKey = ''\n  // Reactive code to trigger CHART actions\n  $: if (index[0] != indexPrev[0]) {\n    console.log('Current key: ', key)\n    // if (chartActions[+index[0]]) {\n    //   chartActions[+index[0]]()\n    // }\n    if (chartActions[key]) {\n      chartActions[key]()\n    }\n    indexPrev[0] = index[0]\n  }\n</script>\n\n<!-- <ONSHeader filled={true} /> -->\n<div class=\"app__wrapper\">\n  <Header bgimage=\"./img/simpsons-bg.png\" bgfixed={true} theme=\"light\" compact>\n    <h1 class=\"_text-shadow bg-white\">\n      Visualizing Simpson's Paradox in Covid Vaccine Efficacy\n    </h1>\n    <!-- <p class=\"inset-medium text-big _text-shadow\">... blah blah blah</p> -->\n    <div class=\"_text-shadow\" style=\"margin-top: 48px;\">\n      <Arrow color=\"_white\" {animation}\n        ><span class=\"_bg-white\">Scroll to begin</span></Arrow\n      >\n    </div>\n  </Header>\n\n  <!-- <Filler theme=\"dark\">\n\t<p class=\"text-big\">\n\t\tThis is a large text caption centred on a full-screen page\n\t</p>\n</Filler> -->\n\n  <Section>\n    <h2>Simpson's Paradox</h2>\n    <p>\n      I recently came across a tweet which mentioned the likelihood that recent\n      Covid vaccine efficacy stats coming out of Israel were an example of a\n      famous statistical paradox generally attributed to the British\n      statistician Edward Simpson but noticed by a number of predecessors (see\n      the <a href=\"https://en.wikipedia.org/wiki/Simpson%27s_paradox\"\n        >Wikipedia entry</a\n      > for details). Here's the tweet in question:\n    </p>\n    <div class=\"tweet__image\">\n      <img src=\"img/bak-coleman-tweet.png\" alt=\"\" />\n    </div>\n    <p>\n      The paradox is that while the efficacy (we'll deal with how this is\n      measured shortly) of the vaccine when assessed against the whole\n      population of unvaccinated and fully vaccinated (67.5%) looks low, if we\n      separate the population into over and under 50 years old the efficacy for\n      each of those groups is considerably higher at 91.8% for under 50s and\n      85.2% for over 50s.\n    </p>\n    <p>\n      While it's very cool to have an example of a canonical paradox in the\n      wild, one usually encountered as an interesting statistical quirk while\n      studying the subject, in this case, as highlighted by Bak-Coleman, failure\n      to appreciate the paradoxical results could result in detrimental policy\n      decisions.\n    </p>\n    <p>\n      If we take that low efficacy of 67.5% for the whole population it suggests\n      the need of a booster shot for the currently vaccinated, diverting those\n      vaccines from the unvaccinated. But if we deal with the over and under 50s\n      separately their respective efficacies at 85.2% and 91.8% seem healthy\n      enough and suggest not diverting first and second vaccine shots to boost\n      the vaccinated with a third.\n    </p>\n    <p>\n      So Simpson's paradox is not only interesting in its own right but in this\n      case failure to appreciate it could do harm. Like most good paradoxes,\n      Simpson's is hard to grasp and rather counterintuitive. It seems like a\n      good candidate for some data visualization which can help people to that\n      'aha' moment. There are various ones about but it occurred to me that this\n      was a good case for creating an animated chart where you clearly see the\n      morphing of the whole of the aggregated vaccinated and unvaccinated into\n      age related groups and appreciate the way in which this affects the\n      measured efficacies.\n    </p>\n  </Section>\n\n  <Divider />\n\n  <Section>\n    <h2>Visualising Simpson's Paradox</h2>\n    <p>\n      The sections below will respond to the captions as you scroll down. The\n      mode is set to splitscreen, with captions on the left on larger screens.\n    </p>\n  </Section>\n\n  <Scroller\n    {threshold}\n    bind:index={index[0]}\n    splitscreen={true}\n    bind:key\n    bind:image\n    bind:prevImage\n  >\n    <div slot=\"background\">\n      <figure>\n        <div class=\"col-wide height-full _middle\">\n          <div class=\"image\" class:hidden={!image}>\n            <!-- <img class=\"fade-out\" src={prevImageUrl} alt=\"\" /> -->\n            {#if !!image}\n              <img class=\"fade-in\" src={imageUrl} alt=\"\" />\n            {/if}\n          </div>\n          <div class=\"chart\" class:hidden={!!image}>\n            <SimpsonsChart {groupedByAge} />\n          </div>\n        </div>\n      </figure>\n    </div>\n\n    <div slot=\"foreground\">\n      <section key=\"foo\" image=\"simpsons-legend.png\">\n        <div class=\"col-medium\">\n          <p>\n            In the upcoming chart we'll use the colors red and green to mark the\n            unvaccinated and vaccinated groups. Squares indicate an uninfected\n            sample, triangles a severely infected sample.\n          </p>\n        </div>\n      </section>\n      <section key=\"baa\" image=\"simpsons-legend-u50.png\">\n        <div class=\"col-medium\">\n          <p>\n            We'll place a black circle at the center of samples taken from the\n            under 50s group to clearly divide the over and under 50s.\n          </p>\n        </div>\n      </section>\n      <section key=\"baa\" image=\"simpsons-efficacy.png\">\n        <div class=\"col-medium\">\n          <p>\n            Efficacy is the key metric when calculating the effectiveness of a\n            vaccine. To calculate it we divide the proportion of infected people\n            in the vaccinated group (infected divided by infected plus\n            uninfected) by the proportion of infected people in the unvaccinated\n            group. Note that efficacy is zero if those proportions are the same\n            and 100% if there are no infected members of the vaccinated group.\n          </p>\n        </div>\n      </section>\n      <section key=\"ungrouped\">\n        <div class=\"col-medium\">\n          <p>\n            Here we see the two groups of vaccinated and unvaccinated with their\n            relative numbers of uninfected and severely infected. The total\n            efficacy of the vaccine is 67.5%, a number disturbingly low.\n          </p>\n          <p>\n            Note that the majority of the unvaccinated are under 50 and that of\n            those the large majority of severely infected are over 50.\n          </p>\n          <p>\n            Scroll down to see what happens when we separate the these groups\n            age, dealing with the over and under fifties separately. But first\n            make sure you agree with the calculated efficacy.\n          </p>\n        </div>\n      </section>\n      <section key=\"grouped\">\n        <div class=\"col-medium\">\n          <p>\n            By further separating the vaccinated and unvaccinated by age we get\n            much more positive numbers for efficacy, demonstrating Simpson's\n            paradox in action. By focusing on the two age defined subgroups we\n            get a very different picture for the efficacy of the Covid vaccine.\n          </p>\n          <p>\n            Scroll up and down between the two sections to see the transition\n            and reassure yourself there's no sleight of hand. Try and get a feel\n            for why the efficacies are so different between the aggregated\n            groups and those separated by age.\n          </p>\n        </div>\n      </section>\n\n      <section class=\"section__end\">\n        <div class=\"col-medium\">\n          <h2>Conclusion</h2>\n          <p>\n            The previous section demonstrated that by separating our vaccinated\n            and unvaccinated population by age we get a very different\n            indication of the overall efficacy of the Covid vaccine. If policy\n            makers were given the efficacy of the total population (67.5%) they\n            may well conclude a need for a booster shot for the vulnerable\n            groups, potentially diverting precious vaccine resources from the\n            unvaccinated. However, if they were shown the efficacy by age (92.1%\n            for the under 50s, 85.8% for the over 50s) it is unlikely a booster\n            shot would be found necessary. In this instance the ability to grasp\n            Simpson's paradox is not a cool statistical insight but could have\n            life and death consequences in the real world.\n          </p>\n        </div>\n      </section>\n    </div>\n  </Scroller>\n\n  <!-- <Divider /> -->\n\n  <!-- <Section>\n  <h2>This is a wide media grid demo</h2>\n  <p>\n    Below is an example of a media grid where the column width is set to \"wide\"\n    and the grid width is set to \"narrow\".\n  </p>\n</Section>\n\n<Media\n  col=\"wide\"\n  grid=\"narrow\"\n  caption=\"This is an optional caption for the above media.\"\n>\n  <div class=\"media\">media</div>\n  <div class=\"media\">media</div>\n  <div class=\"media\">media</div>\n  <div class=\"media\">media</div>\n</Media> -->\n\n  <!-- <Section>\n    <h2>Conclusion</h2>\n    <p>\n      The previous section demonstrated that by separating our vaccinated and\n      unvaccinated population by age we get a very different indication of the\n      overall efficacy of the Covid vaccine. If policy makers were given the\n      efficacy of the total population (67.5%) they may well conclude a need for\n      a booster shot for the vulnerable groups, potentially diverting precious\n      vaccine resources from the unvaccinated. However, if they were shown the\n      efficacy by age (92.1% for the under 50s, 85.8% for the over 50s) it is\n      unlikely a booster shot would be found necessary. In this instance the\n      ability to grasp Simpson's paradox is not a cool statistical insight but\n      could have life and death consequences in the real world.\n    </p>\n  </Section>\n\n  <ONSFooter /> -->\n</div>\n\n<style lang=\"scss\">/* Styles specific to elements within the demo */\n.label-block {\n  display: inline-block;\n  text-align: right;\n  width: 80px;\n}\n\nselect {\n  width: 210px;\n}\n\n.chart {\n  /* margin-top: 45px; */\n}\n\n/* The properties below make the media DIVs grey, for visual purposes in demo */\n.media {\n  background-color: #f0f0f0;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-flow: column;\n  flex-flow: column;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  text-align: center;\n  color: #aaa;\n}\n\n.bg-white {\n  background: white;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.image {\n  transition: 1.5s ease all;\n}\n\n.image img {\n  padding: 2em 0.5em;\n}\n\n.image,\n.chart {\n  background: white;\n}\n\nsection.section__end {\n  padding: 0 0 10vh 0;\n}</style>\n",
    "<script>\n  export let data\n  export let scale\n\n  let val\n  $: {\n    let nv = data.nvinf / data.nvtot\n    let v = data.vinf / data.vtot\n    val = (1 - v / nv) * 100\n  }\n</script>\n\n<!-- <div style={`transform: scale(${scale}, ${scale})`}> -->\n<div class=\"label\">\n  <div class=\"eq__lead\">Efficacy:</div>\n  <div class=\"eq\">\n    <div class=\"big1\">1-&nbsp;</div>\n    <div class=\"divider\">\n      <div class=\"num\">\n        <span class=\"triangle-up\">({data.vinf}/{data.vtot})</span>\n      </div>\n      <div class=\"den\">\n        <span class=\"triangle-up\">({data.nvinf}/{data.nvtot})</span>\n      </div>\n    </div>\n    <div class=\"efficacy\">\n      = <span class=\"bigsign\">{val.toPrecision(3)}%</span>\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">.label {\n  flex: 1;\n}\n\n.eq {\n  font-family: serif;\n  font-size: 1.5em;\n  display: flex;\n  gap: 0.3em;\n  align-items: center;\n  opacity: 1;\n}\n.eq div {\n  flex: 1;\n}\n.eq .big1 {\n  font-size: 2.2em;\n}\n.eq .efficacy {\n  font-size: 2.2em;\n  font-family: serif;\n  flex: 0 0 100%;\n}\n.eq .num {\n  border-bottom: 2px solid black;\n  color: green;\n}\n.eq .den {\n  color: red;\n}\n\n.eq__lead {\n  font-size: 3.3em;\n  font-family: serif;\n}\n\n.triangle-up::before {\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-left: 0.3em solid transparent;\n  border-right: 0.3em solid transparent;\n  border-bottom: 0.6em solid green;\n  right: 100%;\n  top: 25%;\n  position: absolute;\n  clear: both;\n}\n\n.den .triangle-up::before {\n  border-bottom: 0.6em solid red;\n}\n\n.triangle-up {\n  position: relative;\n}</style>\n",
    "<script>\n  import { LayerCake, Svg } from 'layercake'\n\n  import SimpsonsGrid from './SimpsonsGrid.svelte'\n\n  export let controls = false\n  export let groupedByAge = false\n\n  let cHeight\n\n  $: bottom = cHeight > 600 ? 120 : cHeight > 400 ? 100 : 75\n\n  let animated = false\n  let x = {\n    NV: { O50: [1, 17], U50: [107, 4] },\n    V: { O50: [188, 29], U50: [349, 1] },\n  }\n\n  let data = []\n  $: {\n    let tot = 0\n    let appendGroup = (group, num) => {\n      for (let i = 0; i < num; i++) {\n        data.push({ ...group, id: tot++ })\n      }\n    }\n    appendGroup({ vaccinated: false, infected: false, age: 'O50' }, 1)\n    appendGroup({ vaccinated: false, infected: true, age: 'O50' }, 17)\n    appendGroup({ vaccinated: false, infected: false, age: 'U50' }, 107)\n    appendGroup({ vaccinated: false, infected: true, age: 'U50' }, 4)\n    appendGroup({ vaccinated: true, infected: false, age: 'O50' }, 188)\n    appendGroup({ vaccinated: true, infected: true, age: 'O50' }, 29)\n    appendGroup({ vaccinated: true, infected: false, age: 'U50' }, 349)\n    appendGroup({ vaccinated: true, infected: true, age: 'U50' }, 1)\n    console.log(data)\n  }\n\n  let bigGrid = true\n  setInterval(() => {\n    if (!animated) return\n    if (bigGrid) {\n      bigGrid = false\n      console.log('Big grid: ', bigGrid)\n      switchContext(minGrids)\n    } else {\n      bigGrid = true\n      console.log('Big grid: ', bigGrid)\n      switchContext(majGrids)\n    }\n  }, 10000)\n</script>\n\n<div class=\"chart__wrapper\" bind:clientHeight={cHeight}>\n  <div class=\"chart-container\">\n    <LayerCake\n      padding={{ top: 20, bottom: bottom, left: 0, right: 0 }}\n      yDomain={[0, null]}\n      {data}\n    >\n      <SimpsonsGrid {animated} {groupedByAge} />\n    </LayerCake>\n  </div>\n  {#if controls}\n    <div class=\"chart__controls\">\n      <div class=\"animate\">\n        <button class:active={animated} on:click={() => (animated = !animated)}\n          >{animated ? 'pause' : 'resume'}</button\n        >\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style lang=\"scss\">.chart__wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.chart__wrapper .chart-container {\n  width: 100%;\n  height: 100%;\n}\n@media (min-width: 992px) {\n  .chart_wrapper {\n    height: 100%;\n  }\n}</style>\n",
    "<script>\n  import { getContext } from 'svelte'\n  import { fade } from 'svelte/transition'\n  const { data, containerWidth, width, height, padding } =\n    getContext('LayerCake')\n  import { Svg, Html } from 'layercake'\n  import { scaleBand, scaleLinear } from 'd3-scale'\n  import { range } from 'd3-array'\n  import ActiveGrid from './ActiveGrid.svelte'\n  import Cell from './Cell.svelte'\n  import Eq from './SimpsonEq.svelte'\n  import Legend from './SimpsonsLegend.svelte'\n\n  export let columns = 10\n  export let colors = { NV: 'red', V: 'green' }\n  export let columnWidth = 0.03\n  export let gridPad = 10\n  export let cellPadding = 0.1\n  export let labels = []\n  export let animated = false\n  export let duration = 2000\n  export let groupedByAge = false\n\n  let shapes = {\n    triDown: 'M 0 0 L 1 0 L 0.5 0.866 z',\n    triUp: 'M 0 0.933 L 1 0.933 L 0.5 0.067 z',\n  }\n  let loaded = false\n\n  $: context = { labels: [] }\n  $: desktopFlag = $containerWidth > 600\n  $: if (groupedByAge) {\n    console.log('Switching to minor grids')\n    switchContext(minGrids)\n  } else {\n    console.log('Switching to major grids')\n    switchContext(majGrids)\n  }\n\n  function makeColumns(\n    data,\n    group = 'vaccinated',\n    columns = 10,\n    width = 600,\n    offsetX = 0,\n    offsetY = 0,\n    padding = 0.25\n  ) {\n    let cells = []\n    let majScale = scaleBand()\n      .domain([0, 1])\n      .range([0, width])\n      .paddingOuter(0.1)\n      .paddingInner(0.1)\n    let gridScale = scaleBand()\n      .domain(range(columns))\n      .range([0, majScale.bandwidth()])\n      .padding(0.1)\n    let heightScale = scaleLinear()\n      .domain([0, $height])\n      .range([$height - gridScale.bandwidth(), 0])\n    let calcAttrs = (cell, i, group) => {\n      let x = majScale(group) + gridScale(i % columns) + offsetX\n      let y = gridScale.step() * parseInt(i / columns) + offsetY\n      y = heightScale(y)\n      return {\n        x,\n        y,\n        width: gridScale.bandwidth(),\n        height: gridScale.bandwidth(),\n        id: cell.id,\n        attrs: { ...cell },\n        fill: cell.vaccinated ? 'green' : 'red',\n        shape: cell.infected ? shapes.triUp : 'rect',\n        stroked: cell.age === 'U50' ? true : false,\n      }\n    }\n\n    let tot = 0\n    let _cells = data\n      .filter((d) => d.vaccinated)\n      .sort((a, b) => (a.infected === b.infected ? 0 : a.infected ? 1 : -1))\n\n    _cells.forEach((c) => {\n      cells.push(calcAttrs(c, tot++, 0))\n    })\n\n    tot = 0\n    _cells = data\n      .filter((d) => !d.vaccinated)\n      .sort((a, b) => (a.infected === b.infected ? 0 : a.infected ? 1 : -1))\n\n    _cells.forEach((c) => {\n      cells.push(calcAttrs(c, tot++, 1))\n    })\n\n    // cells = cells.sort((a, b) =>\n    //   a.attrs.infected === b.attrs.infected ? 0 : a.attrs.infected ? -1 : 1\n    // )\n\n    return cells\n  }\n\n  function getGroupStats(cells) {\n    let s = {}\n    s.vtot = cells.filter((c) => c.vaccinated).length\n    s.vinf = cells.filter((c) => c.vaccinated).filter((c) => c.infected).length\n    s.nvtot = cells.filter((c) => !c.vaccinated).length\n    s.nvinf = cells\n      .filter((c) => !c.vaccinated)\n      .filter((c) => c.infected).length\n    console.log('Groups stats: ', s)\n    return s\n  }\n\n  let cells = [],\n    tdata\n\n  let majGrids, minGrids\n  $: {\n    majGrids = {\n      cells: makeColumns($data, 'vaccinated', 20, $width),\n      labels: [],\n    }\n\n    majGrids.labels = [\n      {\n        x: $width / 2,\n        y: $padding.bottom,\n        stats: getGroupStats($data),\n        scale: 0.5,\n        width: $width * 0.7,\n      },\n    ]\n\n    let labels = []\n    tdata = $data.filter((d) => d.age === 'O50')\n    labels.push({\n      x: (3 * $width) / 4,\n      y: $padding.bottom,\n      stats: getGroupStats(tdata),\n      scale: 0.3,\n      width: $width * 0.35,\n    })\n    let o50 = makeColumns(tdata, 'vaccinated', 10, $width / 2, $width / 2)\n    tdata = $data.filter((d) => d.age === 'U50')\n    labels.push({\n      x: $width / 4,\n      y: $padding.bottom,\n      stats: getGroupStats(tdata),\n      scale: 0.3,\n      width: $width * 0.35,\n    })\n    let u50 = makeColumns(tdata, 'vaccinated', 10, $width / 2)\n    minGrids = {\n      cells: o50.concat(u50),\n      labels: labels,\n    }\n    //console.log('Data: ', cells)\n    //cells = majGrids.cells\n    switchContext(majGrids)\n  }\n\n  let switchContext = (_context) => {\n    context = _context\n    console.log('Context: ', context)\n    if (context.cells) {\n      cells = context.cells\n    }\n  }\n\n  // let bigGrid = true\n  // setInterval(() => {\n  //   if (!animated) return\n  //   if (bigGrid) {\n  //     bigGrid = false\n  //     console.log('Big grid: ', bigGrid)\n  //     switchContext(minGrids)\n  //   } else {\n  //     bigGrid = true\n  //     console.log('Big grid: ', bigGrid)\n  //     switchContext(majGrids)\n  //   }\n  // }, 10000)\n\n  $: console.log('Context changed: ', context, $width, $containerWidth)\n</script>\n\n<!-- <ActiveGrid {cells} width={cellWidth} /> -->\n{#if $containerWidth > 100}\n  <Svg>\n    {#each cells as cell (cell.id)}\n      <g>\n        <Cell {...cell} {duration} />\n      </g>\n    {/each}\n  </Svg>\n  <Html>\n    {#if context}\n      <!-- <div class=\"labels\"> -->\n      {#each context.labels as label}\n        <div\n          class=\"label__wrapper\"\n          style={`left: ${label.x}px; bottom: -${label.y}px; _width: ${label.width}px`}\n        >\n          <Eq data={label.stats} scale={label.scale} />\n        </div>\n      {/each}\n      <!-- </div> -->\n    {/if}\n    <!-- {#if desktopFlag}\n      <Legend x={$width / 2} y={$height - $padding.top} />\n    {/if} -->\n  </Html>\n{/if}\n\n<style>\n  .label__wrapper {\n    position: absolute;\n    transform: translateX(-50%);\n    display: flex;\n    font-size: min(1vh, 12px);\n  }\n</style>\n",
    "<script>\n  export let x\n  export let y\n</script>\n\n<div class=\"legend\" style={`left: ${x}px; bottom: ${y}px`}>\n  <div class=\"legend__grid\">\n    <div class=\"symbol vac square\">&nbsp;Vaccinated</div>\n    <div class=\"symbol nvac square\">&nbsp;Unvaccinated</div>\n    <div class=\"symbol triangle\">&nbsp;Severe infection</div>\n    <div class=\"symbol circle\">&nbsp;Under 50</div>\n  </div>\n</div>\n\n<style lang=\"scss\">.legend {\n  position: absolute;\n  transform: translate(-50%, 50%);\n}\n\n.legend__grid {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25em;\n  font-size: 0.8em;\n}\n.legend__grid .vac::before {\n  background: green;\n}\n\n.symbol {\n  line-height: 1;\n}\n\n.symbol::before {\n  content: \" \";\n  background-color: gray;\n  height: 1em;\n  width: 1em;\n  right: 100%;\n  position: absolute;\n  clear: both;\n}\n\n.triangle::before {\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-left: 0.5em solid transparent;\n  border-right: 0.5em solid transparent;\n  border-bottom: 1em solid gray;\n  background-color: transparent;\n  right: 100%;\n  position: absolute;\n  clear: both;\n}\n\n.circle::before {\n  background-color: black;\n  border-radius: 50%;\n  height: 0.3em;\n  width: 0.3em;\n  margin: 0.3em;\n}\n\n.vac::before {\n  background-color: green;\n}\n\n.nvac::before {\n  background-color: red;\n}</style>\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 75px;\n    border: none;\n    border-top: 2px solid;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let center = true;\n\texport let wide = false;\n\texport let short = false;\n</script>\n\n<style>\n\tsection {\n\t\tpadding: 36px 0;\n\t}\n\t.short {\n\t\tmin-height: 70vh;\n\t}\n</style>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"middle\" class:center class:col-medium={!wide} class:col-wide={wide} class:height-full={!short} class:short>\n\t\t<slot></slot>\n\t</div>\n</section>",
    "<script>\n  import { themes } from '../config.js'\n  import { getContext } from 'svelte'\n\n  export let theme = getContext('theme')\n  export let bgimage = null\n  export let bgfixed = false\n  export let center = true\n  export let short = false\n  export let compact = false\n\n  let style = ''\n\n  if (bgimage) {\n    style += `background-image: url(${bgimage});`\n  } else {\n    style += 'background-image: none;'\n  }\n\n  if (bgfixed) {\n    style += ' background-attachment: fixed;'\n  }\n</script>\n\n<header\n  style=\"color: {themes[theme]['text']}; background-color: {themes[theme][\n    'background'\n  ]}; {style}\"\n  class:compact\n  class:short\n>\n  <div\n    class=\"v-padded col-wide middle\"\n    style=\"position: relative\"\n    class:compact\n    class:short\n    class:height-full={!short && !compact}\n  >\n    <div class:center>\n      <slot />\n    </div>\n  </div>\n</header>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .compact {\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 40px 0;\n  }\n</style>\n",
    "<script>\n\timport { themes } from \"../config.js\";\n\timport { onMount, getContext } from \"svelte\";\n\timport { debounce } from \"debounce\";\n\n\tconst colWidths = {\n\t\tnarrow: 200,\n\t\tmedium: 300,\n\t\twide: 500,\n\t};\n\n\texport let theme = getContext(\"theme\");\n\texport let col = \"medium\";\n\texport let grid = null;\n\texport let caption = null;\n\texport let height = 200;\n\texport let gap = 12;\n\n\tlet gridClass = '';\n\n\tif (grid !== '') {\n    gridClass = ` grid-${grid}`;\n  }\n\n\tfunction supportsGrid() {\n  \tlet div = document.createElement(\"div\");\n\t\tlet val = \"1px\";\n  \tdiv.style[\"grid-gap\"] = val\n  \treturn div.style[\"grid-gap\"] === val;\n\t}\n\n\tconsole.log(supportsGrid());\n\n\tlet nogrid = !supportsGrid();\n\n\tlet rowHeight = !Number.isNaN(height) ? height + \"px\" : height;\n\n\tlet gridGap = !Number.isNaN(gap) ? gap + \"px\" : gap;\n\n\t// The code below this point mimics CSS Grid functionality in IE 11\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\n\tlet gridWidth;\n\tlet cols;\n\n\tlet el;\n\tlet divs;\n\tlet count;\n\n\tif (nogrid) {\n\t\tonMount(() => {\n\t\t\tresize();\n\t\t});\n\t}\n\n\tconst update = debounce(resize, 200);\n\n\tfunction resize() {\n\t\tif (el && !divs) {\n\t\t\tlet arr = [];\n\t\t\tlet children = el.childNodes;\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tif (child.nodeName == \"DIV\") {\n\t\t\t\t\tarr.push(child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdivs = arr;\n\t\t}\n\t\tcount = divs.length;\n\t\tcols =\n\t\t\t!minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\n\tfunction makeCols() {\n\t\tlet r =\n\t\t\tMath.ceil(count / cols) > 1\n\t\t\t\t? `-ms-grid-rows: ${rowHeight} (${gap}px ${rowHeight})[${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }]; grid-template-rows: ${rowHeight} repeat(${\n\t\t\t\t\t\tMath.ceil(count / cols) - 1\n\t\t\t\t  }, ${gap}px ${rowHeight});`\n\t\t\t\t: `-ms-grid-rows: ${rowHeight}; grid-template-rows: ${rowHeight};`;\n\t\tlet c =\n\t\t\tcols > 1\n\t\t\t\t? `-ms-grid-columns: 1fr (${gap}px 1fr)[${\n\t\t\t\t\t\tcols - 1\n\t\t\t\t  }]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);`\n\t\t\t\t: \"\";\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row};`;\n\t\t});\n\t}\n\n\t$: nogrid && (minWidth || gridWidth) && update();\n</script>\n\n{#if nogrid}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid-ms\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</figure>\n{:else}\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div class=\"grid{gridClass}\" style=\"grid-gap: {gridGap}; min-height: {rowHeight}\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{/if}\n{#if caption}\n\t<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t\t<div class=\"col-medium\">\n\t\t\t<div class=\"caption\">{@html caption}</div>\n\t\t</div>\n\t</caption>\n{/if}\n\n<style>\n\t.grid-ms {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n\t\tmargin-top: 40px;\n\t}\n\t.grid {\n\t\tdisplay: -ms-grid;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fill, 100%);\n\t\tmargin: 40px 0 0 0;\n\t}\n\t.grid-narrow {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr)) !important;\n\t}\n\t.grid-medium {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) !important;\n\t}\n\t.grid-wide {\n\t\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr)) !important;\n\t}\n\t:global(.grid > div) {\n\t\tmin-height: inherit;\n\t}\n</style>\n",
    "<script>\n  import { themes } from '../config.js'\n  import { getContext } from 'svelte'\n\n  export let theme = getContext('theme')\n</script>\n\n<footer\n  style=\"color: {themes[theme]['text']}; background-color: {themes[theme][\n    'pale'\n  ]};\"\n>\n  <div class=\"col-wide\" data-analytics=\"footer\">\n    <!-- <a href=\"https://www.ons.gov.uk/\">\n\t\t\t{#if theme == 'dark'}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-neg-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{:else}\n\t\t\t<img\n\t\t\t\tclass=\"logo-img\"\n\t\t\t\tsrc=\"./img/ons-logo-black-en.svg\"\n\t\t\t\talt=\"Office for National Statistics\" />\n\t\t\t{/if}\n\t\t</a>\n\t\t<ul>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/aboutus/contactus\" class=\"link\" style=\"color: {themes[theme]['text']}\">Contact us</a></li>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/help/privacynotice\" class=\"link\" style=\"color: {themes[theme]['text']}\">Cookies and privacy</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['text']}\">Open Government Licence v3.0</a>,\n\t\t\texcept where otherwise stated\n\t\t</div> -->\n  </div>\n</footer>\n\n<style>\n  footer {\n    padding-bottom: 72px;\n    padding-top: 36px;\n    font-size: 18px;\n  }\n  footer a.link {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    text-decoration: underline;\n    display: inline-block;\n  }\n  footer a.link:hover {\n    text-decoration: none;\n  }\n  footer a.link:active {\n    outline: 3px solid transparent;\n    background-color: #fd0;\n    -webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n    box-shadow: 0 -2px #fd0, 0 4px #222;\n    color: #222;\n    text-decoration: none;\n  }\n  footer hr {\n    margin-bottom: 27px;\n    margin-top: 36px;\n    border: none;\n    border-top: 1px solid #777;\n  }\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    margin-right: 18px;\n    display: inline-block;\n  }\n  .logo-img {\n    margin-bottom: 27px;\n  }\n  .ogl-img {\n    margin: 0 0.5rem 0.2rem 0;\n    width: 59px;\n    height: 24px;\n    vertical-align: middle;\n  }\n  .license {\n    vertical-align: top;\n  }\n  a img:hover {\n    cursor: pointer;\n  }\n</style>\n",
    "<script>\n  import { themes } from '../config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let filled = false;\n\texport let center = true;\n</script>\n\n<nav style=\"border-bottom-color: {themes[theme]['muted']}; {filled ? 'background-color: ' +  themes[theme]['background'] + ';' : ''}\">\n  <div class=\"col-wide middle\" class:center>\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t<picture>\n\t\t\t\t{#if theme == 'dark'}\n\t\t\t\t<img src=\"./img/ons-logo-neg-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else if filled == true}\n\t\t\t\t<img src=\"./img/ons-logo-pos-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else}\n\t\t\t\t<img src=\"./img/ons-logo-black-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{/if}\n\t\t\t</picture>\n\t\t</a>\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 46px;\n\t\tmargin-bottom: -46px;\n\t\tborder-bottom: 1px solid #777;\n\t\tz-index: 1;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: -3px;\n\t\tpadding: 0 5px;\n\t}\n\timg {\n\t\twidth: 270px;\n\t}\n\ta img:hover {\n\t\tcursor: pointer;\n\t}\n</style>",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11 and allow for split-screen view option\r\n\r\n  const handlers = []\r\n  let manager\r\n\r\n  if (typeof window !== 'undefined') {\r\n    const run_all = () => handlers.forEach((fn) => fn())\r\n\r\n    window.addEventListener('scroll', run_all)\r\n    window.addEventListener('resize', run_all)\r\n  }\r\n\r\n  if (typeof IntersectionObserver !== 'undefined') {\r\n    const map = new Map()\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n          const update = map.get(entry.target)\r\n          const index = handlers.indexOf(update)\r\n\r\n          if (entry.isIntersecting) {\r\n            if (index === -1) handlers.push(update)\r\n          } else {\r\n            update()\r\n            if (index !== -1) handlers.splice(index, 1)\r\n          }\r\n        })\r\n      },\r\n      {\r\n        rootMargin: '400px 0px', // TODO why 400?\r\n      }\r\n    )\r\n\r\n    manager = {\r\n      add: ({ outer, update }) => {\r\n        const { top, bottom } = outer.getBoundingClientRect()\r\n\r\n        if (top < window.innerHeight && bottom > 0) handlers.push(update)\r\n\r\n        map.set(outer, update)\r\n        observer.observe(outer)\r\n      },\r\n\r\n      remove: ({ outer, update }) => {\r\n        const index = handlers.indexOf(update)\r\n        if (index !== -1) handlers.splice(index, 1)\r\n\r\n        map.delete(outer)\r\n        observer.unobserve(outer)\r\n      },\r\n    }\r\n  } else {\r\n    manager = {\r\n      add: ({ update }) => {\r\n        handlers.push(update)\r\n      },\r\n\r\n      remove: ({ update }) => {\r\n        const index = handlers.indexOf(update)\r\n        if (index !== -1) handlers.splice(index, 1)\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { onMount } from 'svelte'\r\n\r\n  // config\r\n  export let top = 0\r\n  export let bottom = 1\r\n  export let threshold = 0.5\r\n  export let query = 'section'\r\n  export let parallax = false\r\n\r\n  // bindings\r\n  export let index = 0\r\n  export let count = 0\r\n  export let offset = 0\r\n  export let progress = 0\r\n  export let visible = false\r\n  export let splitscreen = false // Add class to allow for split screen option\r\n  // kgd\r\n  export let key = ''\r\n  export let image = null\r\n  export let prevImage = null\r\n  export let video = null\r\n\r\n  let outer\r\n  let bgContainer // IE patch. Container binding to update inline style\r\n  let foreground\r\n  let background\r\n  let left\r\n  let sections\r\n  let wh = 0\r\n  let fixed\r\n  let offset_top\r\n  let width = 1\r\n  let height\r\n  let inverted\r\n\r\n  $: top_px = Math.round(top * wh)\r\n  $: bottom_px = Math.round(bottom * wh)\r\n  $: threshold_px = Math.round(threshold * wh)\r\n\r\n  $: top, bottom, threshold, parallax, update()\r\n\r\n  onMount(() => {\r\n    sections = foreground.querySelectorAll(query)\r\n    count = sections.length\r\n\r\n    update()\r\n\r\n    const scroller = { outer, update }\r\n\r\n    manager.add(scroller)\r\n    return () => manager.remove(scroller)\r\n  })\r\n\r\n  // IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${\r\n        fixed ? 'fixed' : 'absolute'\r\n      }; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${\r\n        inverted ? 3 : 1\r\n      };`\r\n      bgContainer.style.cssText = style\r\n    }\r\n  }\r\n\r\n  function update() {\r\n    if (!foreground) return\r\n\r\n    // re-measure outer container\r\n    const bcr = outer.getBoundingClientRect()\r\n    left = bcr.left\r\n    width = bcr.right - bcr.left\r\n\r\n    // determine fix state\r\n    const fg = foreground.getBoundingClientRect()\r\n    const bg = background.getBoundingClientRect()\r\n\r\n    visible = fg.top < wh && fg.bottom > 0\r\n\r\n    const foreground_height = fg.bottom - fg.top\r\n    const background_height = bg.bottom - bg.top\r\n\r\n    const available_space = bottom_px - top_px\r\n    progress = (top_px - fg.top) / (foreground_height - available_space)\r\n\r\n    if (progress <= 0) {\r\n      offset_top = 0\r\n      if (fixed) {\r\n        fixed = false\r\n        setFixed()\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n    } else if (progress >= 1) {\r\n      offset_top = parallax\r\n        ? foreground_height - background_height\r\n        : foreground_height - available_space\r\n      if (fixed) {\r\n        fixed = false\r\n        setFixed()\r\n      }\r\n    } else {\r\n      offset_top = parallax\r\n        ? Math.round(top_px - progress * (background_height - available_space))\r\n        : top_px\r\n      if (!fixed) {\r\n        fixed = true\r\n        setFixed()\r\n      }\r\n    }\r\n\r\n    for (index = 0; index < sections.length; index += 1) {\r\n      const section = sections[index]\r\n      const { top } = section.getBoundingClientRect()\r\n\r\n      const next = sections[index + 1]\r\n      const bottom = next ? next.getBoundingClientRect().top : fg.bottom\r\n      // kgd\r\n      prevImage = image\r\n      image = null\r\n      video = null\r\n      key = section.getAttribute('key')\r\n      image = section.getAttribute('image')\r\n\r\n      offset = (threshold_px - top) / (bottom - top)\r\n      if (bottom >= threshold_px) break\r\n    }\r\n  }\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh} />\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n  <svelte-scroller-background-container\r\n    class=\"background-container\"\r\n    bind:this={bgContainer}\r\n  >\r\n    <svelte-scroller-background bind:this={background}>\r\n      <slot name=\"background\" />\r\n    </svelte-scroller-background>\r\n  </svelte-scroller-background-container>\r\n\r\n  <svelte-scroller-foreground bind:this={foreground}>\r\n    <slot name=\"foreground\" />\r\n  </svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n  svelte-scroller-outer {\r\n    display: block;\r\n    position: relative;\r\n    max-width: 100%;\r\n  }\r\n\r\n  svelte-scroller-background {\r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n\r\n  svelte-scroller-foreground {\r\n    display: block;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n\r\n  svelte-scroller-foreground::after {\r\n    content: ' ';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n\r\n  svelte-scroller-background-container {\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    pointer-events: none;\r\n    /* height: 100%; */\r\n\r\n    /* in theory this helps prevent jumping */\r\n    will-change: transform;\r\n    /* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n  }\r\n</style>\r\n",
    "<script>\n\timport { onMount, setContext } from \"svelte\";\n\timport mapbox from \"mapbox-gl\";\n\n\texport let map;\n\texport let id = \"map\";\n\texport let location = {\n\t\tbounds: [\n\t\t\t[-5.816, 49.864],\n\t\t\t[1.863, 55.872],\n\t\t], // England & Wales\n\t};\n\texport let style;\n\texport let interactive = true;\n\texport let minzoom = 0;\n\texport let maxzoom = 14;\n\texport let zoom = null;\n\n\tlet container;\n\tlet w;\n\tlet options;\n\n\tsetContext(\"map\", {\n\t\tgetMap: () => map,\n\t});\n\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (location.lon && location.lat) {\n\t\toptions = {\n\t\t\tcenter: [location.lon, location.lat],\n\t\t};\n\t\tif (location.zoom) {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconst link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://unpkg.com/mapbox-gl@1.13.0/dist/mapbox-gl.css\";\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle: style,\n\t\t\t\tminZoom: minzoom,\n\t\t\t\tmaxZoom: maxzoom,\n\t\t\t\tinteractive: interactive,\n\t\t\t\t...options,\n\t\t\t});\n\n\t\t\t// Get initial zoom level\n\t\t\tmap.on(\"load\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t});\n\n\t\t\t// Update zoom level when the view zooms\n\t\t\tmap.on(\"zoom\", () => {\n\t\t\t\tzoom = map.getZoom();\n\t\t\t});\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n\n\t// Function that forces map to resize to fit parent div, in case it doesn't automatically\n\tfunction resizeCanvas() {\n\t\tlet canvas = document.getElementsByClassName(\"mapboxgl-canvas\");\n\t\tif (canvas[0]) {\n\t\t\tcanvas[0].style.width = \"100%\";\n\t\t\tmap.resize();\n\t\t}\n\t}\n\n\t// Invoke above function when parent div size changes\n\t$: w && resizeCanvas();\n</script>\n\n<div bind:clientWidth={w} bind:this={container} {id}>\n\t{#if map}\n\t\t<slot />\n\t{/if}\n</div>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n  export let color = \"black\";\n  export let animation = true;\n\texport let center = true;\n\n  const colors = [\"black\", \"white\"];\n\n  color = colors.includes(color) ? color : \"black\";\n</script>\n\n{#if center}\n<slot></slot><br/>\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/>\n{:else}\n<img src=\"./img/scroll-down-{color}.svg\" class=\"arrow left\" class:bounce={animation} alt=\"\" aria-hidden=\"true\"/><slot></slot>\n{/if}\n\n<style>\n\t.arrow {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.left {\n\t\tmargin-right: 10px;\n\t}\n\t.bounce {\n\t\t-webkit-animation-duration: 2s;\n\t\t        animation-duration: 2s;\n\t\t-webkit-animation-iteration-count: infinite;\n\t\t        animation-iteration-count: infinite;\n\t\t-webkit-animation-name: bounce;\n\t\t        animation-name: bounce;\n\t\t-webkit-animation-timing-function: ease;\n\t\t        animation-timing-function: ease;\n\t}\n\t@-webkit-keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n\t@keyframes bounce {\n\t\t0%   { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t30%  { -webkit-transform: translateY(-10px); transform: translateY(-10px); }\n\t\t50%  { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t\t100% { -webkit-transform: translateY(10px); transform: translateY(10px); }\n\t}\n</style>",
    "<script>\n  import parse from 'parse-color';\n\n  export let color = 'lightgrey';\n\texport let nowrap = true;\n\n  function textColor(rgb) {\n\t\tconst brightness = ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000;\n\t\treturn (brightness > 125) ? 'black' : 'white';\n\t}\n\n  let text = 'black';\n\n\t$: rgb = parse(color).rgb;\n\t\n\t$: if (rgb) {\n\t\ttext = textColor(rgb);\n\t}\n\n</script>\n\n<span class=\"em\" class:nowrap style=\"background-color: {color}; color: {text};\" role=\"presentation\">\n  <slot></slot>\n</span>\n\n<style>\n\t.em {\n\t\tpadding: 1px 4px 1px 4px;\n\t\tfont-weight: bold;\n\t}\n\t.nowrap {\n\t\twhite-space: nowrap;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}